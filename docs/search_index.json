[
["index.html", "A Little R Book for Lehman Sociology Students Preface", " A Little R Book for Lehman Sociology Students Lehman Sociology 2017-10-15 Preface The ideas is to create a useful book that can be expanded collaboartively Contributors: Elin Waring "],
["introduction.html", "Chapter 1 Introduction", " Chapter 1 Introduction This book is going to be a collection of short, useful documents for students. You are welcome to suggestion additions, corrections, and anything else in the github repository. "],
["statistical-functions-for-one-variable.html", "Chapter 2 Statistical Functions (for one variable) 2.1 These are from core R 2.2 These are from lehmansociology", " Chapter 2 Statistical Functions (for one variable) Here are some basic statistical functions you should really know by heart. Most of them are obvious if you think about them. You should also know the formula or other calculation procedures for these. These will be presented using the $ format and some commonly used sample data sets. The na.rm option is included because you are always safer using it. 2.1 These are from core R That means the base and stats packages. # Mean mean(chickwts$weight, na.rm = TRUE) ## [1] 261.3099 # Variance (for a sample) var(chickwts$weight, na.rm = TRUE) ## [1] 6095.503 # Variance (for a population) # There is no simple function for this. The code below shows one possible way # The length() function gives you the total rows and na.omit() ensures that you are not counting NAs, since # they are not in the calculation of var(). var(chickwts$weight, na.rm = TRUE)*(length(na.omit(chickwts$weight)/(length(na.omit(chickwts$weight)) - 1))) ## [1] 432780.7 # Standard deviation (for a sample) sd(chickwts$weight, na.rm = TRUE) ## [1] 78.0737 # Note there is no simple conversion from sample standard deviation # to population standard deviation. # Calculate the population variance and take the square root. # Median median(chickwts$weight, na.rm = TRUE) ## [1] 258 # Quantiles (you specify which ones you want) quantile(chickwts$weight, probs = c(.25, .50, .75), na.rm = TRUE) ## 25% 50% 75% ## 204.5 258.0 323.5 # Minimum min(chickwts$weight, na.rm = TRUE) ## [1] 108 # Maximum max(chickwts$weight, na.rm = TRUE) ## [1] 423 # Table # This is normally used for factor variables table(chickwts$feed, useNA = &quot;ifany&quot;) ## ## casein horsebean linseed meatmeal soybean sunflower ## 12 10 12 11 14 12 Also you should know that the summary() function can be used on almost object and will give you results depending on what that object is. summary(chickwts) ## weight feed ## Min. :108.0 casein :12 ## 1st Qu.:204.5 horsebean:10 ## Median :258.0 linseed :12 ## Mean :261.3 meatmeal :11 ## 3rd Qu.:323.5 soybean :14 ## Max. :423.0 sunflower:12 summary(chickwts$weight) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 108.0 204.5 258.0 261.3 323.5 423.0 summary(chickwts$feed) ## casein horsebean linseed meatmeal soybean sunflower ## 12 10 12 11 14 12 2.2 These are from lehmansociology Since that is a package you either need to load it with library() or use the notation we use here. # Mode lehmansociology::MODE(chickwts$feed) ## $dataframe ## [1] &quot;soybean&quot; # Frequency lehmansociology::frequency(chickwts$feed) ## Values Freq Percent ## casein 12 16.9 ## horsebean 10 14.1 ## linseed 12 16.9 ## meatmeal 11 15.5 ## soybean 14 19.7 ## sunflower 12 16.9 ## Total 71 100 "],
["code.html", "Chapter 3 Code 3.1 Assignment operator 3.2 Combine function 3.3 Pipe operator 3.4 Basic math operations 3.5 Comparison operators 3.6 AND and OR (logical operators)", " Chapter 3 Code This chapter is going to review some basic code items that come up regularly. You should memorize these. 3.1 Assignment operator &lt;- This is used to assign the value of whatever is on the right to the object on the left. a &lt;- 4 Means that a is now 4. b &lt;- chickwts Means that b is now a data frame with all the data from chickwts. 3.2 Combine function c() This essential function lets you put a set of values into a vector. a &lt;- c(2, 3, 4, 5) b &lt;- c(&quot;red&quot;, &quot;yellow&quot;, &quot;blue&quot;) c &lt;- c(TRUE, FALSE, FALSE, TRUE) Now a, b, and c refer to these sets of values. 3.3 Pipe operator This is not part of the core of R, but it is widely used. It comes from the magrittr package. %&gt;% The way it works is that everything on the left becomes and input to what is done on the right. This is supposed to be more like natural writing. The code below says: take the chickwts data, group the rows by the feed variable, then get the mean weight for each of the feed types. library(magrittr) chickwts %&gt;% dplyr::group_by(feed) %&gt;% dplyr::summarize( mean=mean(weight)) ## # A tibble: 6 x 2 ## feed mean ## &lt;fctr&gt; &lt;dbl&gt; ## 1 casein 323.5833 ## 2 horsebean 160.2000 ## 3 linseed 218.7500 ## 4 meatmeal 276.9091 ## 5 soybean 246.4286 ## 6 sunflower 328.9167 Not all functions work with piped data. 3.4 Basic math operations Name Operator Example Result Addition + 3 + 4 7 Subtraction - 4-3 1 Multiplication * 3*4 12 Division / 3/4 0.75 Raise to power ^ 3^4 81 3.5 Comparison operators Name Operator Example Result Equal to == (2+3) == (3+3) FALSE Not equal to != (2+3) == (3+3) FALSE Greater than &gt; 5 &gt;2 TRUE Less than &lt; 5 &lt; 2 FALSE Greater than or equal to &gt;= 2 &gt;= 2 TRUE Less than or equal to &lt;= 2 &lt;= 3 TRUE 3.6 AND and OR (logical operators) As you start to do more complex things with recoding variables you will often want to use two or more statements in combination. For example you may want to identify everyone 18 or over but who are also 65 or under. For these we use the logical operators. The first set of examples are very simple. Name Operator Meaning Example Result OR | At least one statement is true 7 == 6+1 | 7 == 8-1 TRUE OR | At least one statement is true 7 == 6+1 | 7 == 8+1 TRUE Exclusive OR xor(x,y) Exactly one statement is true xor(7 == 6+1, 7 == 8-1) FALSE Exclusive OR xor(x,y) Exactly one statement is true xor(7 == 6+1, 7 == 8+1) TRUE AND &amp; All statements are true 7 == 6+1 &amp; 7 == 8-1 TRUE AND &amp; All statements are true 7 == 6+1 &amp; 7 == 8+1 FALSE If you know any other computer languages be aware that | and &amp; and || and &amp;&amp; work differently in R than you might expect. "],
["errors.html", "Chapter 4 Errors 4.1 Could not find function 4.2 Problems with variables 4.3 Problems with markdown 4.4 Other problems when knittng", " Chapter 4 Errors This chapter is going to describe some commone error messages and how to solve them. 4.1 Could not find function Common causes # Use upper case when you should use lower case or lower case # when you should use upper case Mean(chickwts$weight) Error in Mean(chickwts$weight) : could not find function “Mean” # Wrong spelling men(chickwts$weight) Error in men(chickwts$weight) : could not find function “men” Correct code for all of the above mean(chickwts$weight) ## [1] 261.3099 # Need to load library (MODE() is from lehmansociology) MODE(chickwts$feed) Error in MODE(chickwts$feed) : could not find function “MODE” Correct code lehmansociology::MODE(chickwts$feed) ## $dataframe ## [1] &quot;soybean&quot; 4.2 Problems with variables Error message: argument is not numeric or logical: returning NA[1] NA All of the examples below give the same message. # Misspelled variable name mean(chickwts$wieght) # Left out the variable name (only gave name of the data frame) mean(chickwts) # Tried to calculate a mean on a factor (nominal or categorical variable) mean(chickwts$feed) 4.3 Problems with markdown Error Message: Error: unexpected symbol in “Started writing” Started writing inside the tick marks Text goes outside the tick marks, code goes inside the tick marks. If you want text inside the tick marks in order to comment your code, start the line with a #. Correct code # Started writing inside the tick marks Error: Error in parse(text = x, srcfile = src) : attempt to use zero-length variable name Calls: local … evaluate -&gt; parse_all -&gt; parse_all.character -&gt; parse This means you have something wrong with your tick marks around the code chunk. (In the example below the tick marks are in quotation marks so they will show. Do not use quotation marks in your markdown in this way. ) &#39;```{r}&#39; # Differet number of tick marks mean(chickwts$weight) &#39;``&#39; `` Error: Nothing happens. Code does not run. Code is outside of tick marks mean(chickwts$weight) 4.4 Other problems when knittng Error: Package inputenc Error: Unicode char This usually means you have a non-standard character in your text. It happens because you copy and pasted into the file from another document and something went wrong with the paste. The error message will tell you the character that is causing the problem. You should search your document for that character. "],
["statistics-for-multiple-variables.html", "Chapter 5 Statistics for Multiple Variables 5.1 Using formula notation 5.2 Using summarize 5.3 Other approaches", " Chapter 5 Statistics for Multiple Variables Most of the time we want to look at the relationship between two or more variables. R has several different ways of working with multiple variables. 5.1 Using formula notation In R a “forumula” is created using the ~ operator, which is found on the top left of the keyboard. In these examples the formula operator always works like this: dependent_variable ~ independent_variable and if you have multiple independent_variables use a + to add them on the right. Crosstab using lehmansociology lehmansociology::crosstab(tension ~ wool, data = warpbreaks) ## tension ~ wool ## A B ## L 9 9 ## M 9 9 ## H 9 9 ## Total N 27 27 Ordinary Linear Model (This means it has an interval dependent variable.) lm(raises ~ critical, data = attitude) ## ## Call: ## lm(formula = raises ~ critical, data = attitude) ## ## Coefficients: ## (Intercept) critical ## 35.025 0.396 Generalized Linear Model (In this case a logistic regression.) (in this code a dichtomous dependent variable is created using the cut() functions.) USJudgeRatings$RTEN_d &lt;- cut(USJudgeRatings$RTEN, median(USJudgeRatings$RTEN)) glm(RTEN_d ~ INTG, data = USJudgeRatings, family = binomial()) ## ## Call: glm(formula = RTEN_d ~ INTG, family = binomial(), data = USJudgeRatings) ## ## Coefficients: ## (Intercept) INTG ## -29.387 4.325 ## ## Degrees of Freedom: 42 Total (i.e. Null); 41 Residual ## Null Deviance: 26.62 ## Residual Deviance: 8.603 AIC: 12.6 5.2 Using summarize 5.3 Other approaches "]
]
